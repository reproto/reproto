{
  "comment": [],
  "decls": [
    {
      "type": "type",
      "name": {
        "package": {
          "package": "test"
        },
        "parts": [
          "Entry"
        ]
      },
      "ident": "Entry",
      "comment": [],
      "decls": [],
      "fields": [],
      "codes": []
    },
    {
      "type": "type",
      "name": {
        "package": {
          "package": "test"
        },
        "parts": [
          "Type"
        ]
      },
      "ident": "Type",
      "comment": [],
      "decls": [],
      "fields": [],
      "codes": [
        {
          "context": {
            "type": "rust"
          },
          "lines": [
            "pub fn type_method(&self) {",
            "}"
          ]
        },
        {
          "context": {
            "type": "java",
            "imports": [
              "java.util.List",
              "java.util.ArrayList",
              "java.util.Map"
            ]
          },
          "lines": [
            "public List<Map<String, String>> typeMethod() {",
            "  return new ArrayList<>();",
            "}"
          ]
        },
        {
          "context": {
            "type": "js"
          },
          "lines": [
            "typeMethod() {",
            "}"
          ]
        },
        {
          "context": {
            "type": "python"
          },
          "lines": [
            "def type_method(self):",
            "  pass"
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": {
        "package": {
          "package": "test"
        },
        "parts": [
          "Interface"
        ]
      },
      "ident": "Interface",
      "comment": [],
      "decls": [],
      "fields": [],
      "codes": [
        {
          "context": {
            "type": "rust"
          },
          "lines": [
            "pub fn interface_method(&self) {",
            "}"
          ]
        },
        {
          "context": {
            "type": "java",
            "imports": []
          },
          "lines": [
            "public void interfaceMethod();"
          ]
        },
        {
          "context": {
            "type": "js"
          },
          "lines": [
            "interfaceMethod() {",
            "}"
          ]
        },
        {
          "context": {
            "type": "python"
          },
          "lines": [
            "def interface_method(self):",
            "  pass"
          ]
        }
      ],
      "sub_types": [
        {
          "name": {
            "package": {
              "package": "test"
            },
            "parts": [
              "Interface",
              "SubType"
            ]
          },
          "ident": "SubType",
          "comment": [],
          "decls": [],
          "fields": [],
          "codes": [
            {
              "context": {
                "type": "rust"
              },
              "lines": [
                "pub fn subtype_method(&self) {",
                "}"
              ]
            },
            {
              "context": {
                "type": "java",
                "imports": []
              },
              "lines": [
                "@Override",
                "public void interfaceMethod() {",
                "}"
              ]
            },
            {
              "context": {
                "type": "js"
              },
              "lines": [
                "subtypeMethod() {",
                "}"
              ]
            },
            {
              "context": {
                "type": "python"
              },
              "lines": [
                "def subtype_method(self):",
                "  pass"
              ]
            }
          ]
        }
      ],
      "sub_type_strategy": {
        "type": "tagged",
        "tag": "type"
      }
    },
    {
      "type": "enum",
      "name": {
        "package": {
          "package": "test"
        },
        "parts": [
          "Enum"
        ]
      },
      "ident": "Enum",
      "comment": [],
      "decls": [],
      "enum_type": "String",
      "variants": {
        "type": "string",
        "variants": [
          {
            "name": {
              "package": {
                "package": "test"
              },
              "parts": [
                "Enum",
                "Variant"
              ]
            },
            "ident": "Variant",
            "comment": [],
            "value": "Variant"
          }
        ]
      },
      "codes": [
        {
          "context": {
            "type": "rust"
          },
          "lines": [
            "pub fn enum_method(&self) {",
            "}"
          ]
        },
        {
          "context": {
            "type": "java",
            "imports": []
          },
          "lines": [
            "public void enumMethod() {",
            "}"
          ]
        },
        {
          "context": {
            "type": "js"
          },
          "lines": [
            "enumMethod() {",
            "}"
          ]
        },
        {
          "context": {
            "type": "python"
          },
          "lines": [
            "def enum_method(self):",
            "  pass"
          ]
        }
      ]
    },
    {
      "type": "tuple",
      "name": {
        "package": {
          "package": "test"
        },
        "parts": [
          "Tuple"
        ]
      },
      "ident": "Tuple",
      "comment": [],
      "decls": [],
      "fields": [],
      "codes": [
        {
          "context": {
            "type": "rust"
          },
          "lines": [
            "pub fn tuple_method(&self) {",
            "}"
          ]
        },
        {
          "context": {
            "type": "java",
            "imports": []
          },
          "lines": [
            "public void tupleMethod() {",
            "}"
          ]
        },
        {
          "context": {
            "type": "js"
          },
          "lines": [
            "tupleMethod() {",
            "}"
          ]
        },
        {
          "context": {
            "type": "python"
          },
          "lines": [
            "def tuple_method(self):",
            "  pass"
          ]
        }
      ]
    }
  ]
}
