type Entry {
  explicit?: EnumExplicit;

  implicit?: EnumImplicit;

  enum_u32?: EnumU32;

  enum_u64?: EnumU64;

  enum_i32?: EnumI32;

  enum_i64?: EnumI64;
}

/// Explicitly assigned strings
enum EnumExplicit as string {
  A as "foo";

  B as "bar";
}

/// Implicit naming depending on the variant
enum EnumImplicit as string {
  A as "A";

  B as "B";
}

/// Variants with long names.
enum EnumLongNames as string {
  FooBar as "FooBar";

  Baz as "Baz";
}

enum EnumU32 as u32 {
  Min as 0;

  Max as 2147483647;
}

enum EnumU64 as u64 {
  Min as 0;

  Max as 9007199254740991;
}

enum EnumI32 as i32 {
  Min as -2147483648;

  NegativeOne as -1;

  Zero as 0;

  Max as 2147483647;
}

enum EnumI64 as i64 {
  Min as -9007199254740991;

  NegativeOne as -1;

  Zero as 0;

  Max as 9007199254740991;
}
