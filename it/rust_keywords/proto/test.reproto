use trait as t;

type Entry {
  _as?: string;
  break?: string;
  const?: string;
  continue?: string;
  crate?: string;
  else?: string;
  _enum?: string;
  extern?: string;
  _false?: string;
  fn?: string;
  for?: string;
  if?: string;
  impl?: string;
  in?: string;
  let?: string;
  loop?: string;
  match?: string;
  mod?: string;
  move?: string;
  mut?: string;
  pub?: string;
  ref?: string;
  return?: string;
  self?: string;
  static?: string;
  struct?: string;
  super?: string;
  trait?: string;
  _true?: string;
  _type?: string;
  unsafe?: string;
  _use?: string;
  where?: string;
  while?: string;
  abstract?: string;
  alignof?: string;
  become?: string;
  box?: string;
  do?: string;
  final?: string;
  macro?: string;
  offsetof?: string;
  override?: string;
  priv?: string;
  proc?: string;
  pure?: string;
  sizeof?: string;
  typeof?: string;
  unsized?: string;
  virtual?: string;
  yield?: string;
  imported?: t::Empty;
}
